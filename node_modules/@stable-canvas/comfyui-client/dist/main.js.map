{"version":3,"file":"main.js","sources":["../src/utils/Errors.ts","../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js","../src/utils/misc.ts","../src/client/WsClient.ts","../src/utils/CachedFn.ts","../src/builtins.ts","../src/client/Client.ts","../src/utils/Disposable.ts","../src/pipeline/types.ts","../src/workflow/InvokedWorkflow.ts","../src/workflow/Workflow.ts","../src/plugins/Plugin.ts","../src/plugins/LoginAuthPlugin.ts","../src/pipeline/base.ts","../src/pipeline/efficient.ts","../src/main.ts"],"sourcesContent":["export namespace Errors {\n  export class HttpError extends Error {\n    status: number;\n    json: any;\n\n    constructor(message: string, status: number, json?: any) {\n      super(message);\n      this.name = \"HttpError\";\n      this.status = status;\n      this.json = json;\n    }\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export const uuidv4 = () =>\n  \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n\nexport const isNone = (x: any): x is null | undefined =>\n  x === null || x === undefined;\n","import { EventEmitter } from \"eventemitter3\";\nimport { ComfyUIClientEvents } from \"./ws.types\";\nimport { uuidv4 } from \"../utils/misc\";\nimport { Errors } from \"../utils/Errors\";\nimport { IComfyApiConfig } from \"./types\";\n\n/**\n * A client for interacting with the ComfyUI API server using WebSockets.\n *\n * NOTE: CORS policy: Request header field comfy-user is not allowed by Access-Control-Allow-Headers in preflight response. Please config.use empty string in browser.\n *\n * @example\n * ```typescript\n * const client = new WsClient({\n *  api_host: \"YOUR_API_HOST\"\n * });\n *\n * // Connect to the server\n * client.connect();\n *\n * // Listen for status updates\n * client.on(\"status\", (status) => {\n *   console.log(\"Status:\", status);\n * });\n *\n * // when done, close the client\n * client.close();\n */\nexport class WsClient {\n  static DEFAULT_API_HOST = \"127.0.0.1:8188\";\n  static DEFAULT_API_BASE = \"\";\n  static DEFAULT_USER = \"\";\n  static IS_BROWSER = typeof window !== \"undefined\";\n\n  static loadImageData(buf: ArrayBuffer) {\n    const view = new DataView(buf);\n    const eventType = view.getUint32(0);\n    const imageType = view.getUint32(1);\n\n    if (eventType !== 1) {\n      throw new Error(`Unknown binary websocket message of type ${eventType}`);\n    }\n\n    const mimeTypes = {\n      1: \"image/jpeg\",\n      2: \"image/png\",\n    } as any;\n\n    const mime = mimeTypes[imageType] || \"image/png\";\n    const image = buf.slice(8);\n\n    return { image, mime };\n  }\n\n  api_host: string;\n  api_base: string;\n  clientId?: string;\n  socket?: WebSocket | null;\n  WebSocket: typeof WebSocket;\n  ssl: boolean;\n  user: string;\n  fetch: typeof fetch;\n\n  events: EventEmitter<ComfyUIClientEvents & Record<string & {}, any>> =\n    new EventEmitter();\n\n  protected socket_callbacks: Record<string, any> = {};\n\n  get registered() {\n    return this.events.eventNames();\n  }\n\n  constructor(config: IComfyApiConfig) {\n    this.api_host = config.api_host ?? WsClient.DEFAULT_API_HOST;\n    this.api_base = config.api_base ?? WsClient.DEFAULT_API_BASE;\n    this.clientId = config.clientId ?? uuidv4();\n    this.WebSocket = config.WebSocket ?? globalThis.WebSocket;\n    this.ssl = config.ssl ?? false;\n    this.user = config.user ?? WsClient.DEFAULT_USER;\n    if (!globalThis.fetch) {\n      throw new Error(\"fetch is not defined\");\n    }\n    this.fetch = config.fetch ?? globalThis.fetch.bind(globalThis);\n\n    if (!this.WebSocket) {\n      console.warn(\"No WebSocket implementation available, WebSocket disabled\");\n    }\n  }\n\n  /**\n   * Returns the headers for the API request.\n   *\n   * @param {RequestInit} [options] - (Optional) Additional options for the request.\n   * @return {HeadersInit} The headers for the API request.\n   */\n  apiHeaders(options?: RequestInit) {\n    const headers: HeadersInit = {\n      ...(this.user\n        ? {\n            \"Comfy-User\": this.user,\n          }\n        : {}),\n      // \"User-Agent\": `ComfyUIClient/${version}`,\n      Accept: \"*/*\",\n      ...(options?.headers ?? {}),\n    };\n    return headers;\n  }\n\n  /**\n   * Generates the URL for the API endpoint based on the provided route.\n   *\n   * @param {string} route - The route for the API endpoint.\n   * @return {string} The generated URL for the API endpoint.\n   */\n  apiURL(route: string): string {\n    const url = new URL(`http${this.ssl ? \"s\" : \"\"}://${this.api_host}`);\n    let [pathname, query] = (this.api_base + route).split(\"?\");\n    url.pathname = pathname;\n    url.pathname = url.pathname.replace(/\\/+/g, \"/\");\n    if (query) {\n      url.search = query;\n    }\n    if (this.clientId) {\n      url.searchParams.set(\"clientId\", this.clientId);\n    }\n    return url.toString();\n  }\n\n  /**\n   * Generates a URL for viewing a specific file with the given filename, subfolder, and type.\n   *\n   * @param {string} filename - The name of the file to view.\n   * @param {string} subfolder - The subfolder where the file is located.\n   * @param {string} type - The type of the file.\n   * @return {string} The URL for viewing the file.\n   */\n  viewURL(filename: string, subfolder: string, type: string): string {\n    const query = new URLSearchParams({\n      filename,\n      subfolder,\n      type,\n    }).toString();\n    return `http${this.ssl ? \"s\" : \"\"}://${this.api_host}${\n      this.api_base\n    }/view?${query}`;\n  }\n\n  /**\n   * Generates the WebSocket URL based on the current API host and SSL configuration.\n   *\n   * @return {string} The generated WebSocket URL.\n   */\n  wsURL(): string {\n    const url = new URL(`ws${this.ssl ? \"s\" : \"\"}://${this.api_host}`);\n    url.pathname = \"/ws\";\n    if (this.clientId) {\n      url.searchParams.set(\"clientId\", this.clientId);\n    }\n    return url.toString();\n  }\n\n  /**\n   * Fetches API data based on the provided route and options.\n   *\n   * NOTE: CORS policy: Request header field comfy-user is not allowed by Access-Control-Allow-Headers in preflight response. Please use empty string in browser.\n   *\n   * @param {string} route - The route for the API request.\n   * @param {RequestInit} [options] - (Optional) Additional options for the request.\n   * @return {Promise<Response>} A promise that resolves to the API response.\n   */\n  async fetchApi(route: string, options?: RequestInit): Promise<Response> {\n    if (this.closed) {\n      throw new Error(\"Client is closed\");\n    }\n    const url = this.apiURL(route);\n    const res = await this.fetch(url, {\n      ...options,\n      headers: this.apiHeaders(options),\n    });\n    const { status, statusText } = res;\n\n    if (status < 200 || status >= 400) {\n      throw new Errors.HttpError(\n        `Endpoint Bad Request (${status} ${statusText}): ${url}`,\n        status,\n        await res.json(),\n      );\n    }\n\n    return res;\n  }\n\n  /**\n   * Adds an event listener for the specified event type.\n   *\n   * @param {keyof ComfyUIClientEvents | (string & {})} type - The type of event to listen for.\n   * @param {(...args: any) => void} callback - The callback function to be executed when the event is triggered.\n   * @param {any} options - (Optional) Additional options for the event listener.\n   * @return {() => void} A function that removes the event listener when called.\n   */\n  addEventListener<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\n    type: T,\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\n    options?: any,\n  ) {\n    this.events.on(type as any, callback as any, options);\n\n    return () => {\n      this.events.off(type as any, callback as any);\n    };\n  }\n\n  /**\n   * Adds an event listener for the specified event type.\n   *\n   * @param {keyof ComfyUIClientEvents | (string & {})} type - The type of event to listen for.\n   * @param {(...args: any) => void} callback - The callback function to be executed when the event is triggered.\n   * @param {any} options - (Optional) Additional options for the event listener.\n   * @return {() => void} A function that removes the event listener when called.\n   */\n  on<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\n    type: T,\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\n    options?: any,\n  ) {\n    return this.addEventListener(type, callback, options);\n  }\n\n  /**\n   * Adds an event listener for the specified event type.\n   *\n   * @param {keyof ComfyUIClientEvents | (string & {})} type - The type of event to listen for.\n   * @param {(...args: any) => void} callback - The callback function to be executed when the event is triggered.\n   * @param {any} options - (Optional) Additional options for the event listener.\n   * @return {() => void} A function that removes the event listener when called.\n   */\n  once<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\n    type: T,\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\n    options?: any,\n  ) {\n    this.events.once(type as any, callback as any, options);\n\n    return () => {\n      this.events.off(type as any, callback as any);\n    };\n  }\n\n  protected _polling_timer: any = null;\n  protected _polling_interval = 1000;\n  /**\n   * Poll status for colab and other things that don't support websockets.\n   */\n  private startPollingQueue() {\n    if (this._polling_timer) {\n      return;\n    }\n    this._polling_timer = setInterval(async () => {\n      try {\n        const resp = await this.fetchApi(\"/prompt\");\n        const status = await resp.json();\n        this.events.emit(\"status\", status);\n      } catch (error) {\n        this.events.emit(\"status\", null);\n      }\n    }, this._polling_interval);\n  }\n\n  protected addSocketCallback<K extends keyof WebSocketEventMap>(\n    socket: WebSocket,\n    type: K,\n    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ) {\n    this.socket_callbacks[type] = listener;\n    socket.addEventListener(type, listener, options);\n    return () => {\n      delete this.socket_callbacks[type];\n      socket.removeEventListener(type, listener, options);\n    };\n  }\n\n  /**\n   * Removes all event listeners from the given WebSocket and clears the socket_callbacks object.\n   */\n  protected removeSocketCallbacks() {\n    if (this.socket) {\n      for (const type in this.socket_callbacks) {\n        const listener = this.socket_callbacks[type];\n        this.socket.removeEventListener(type, listener);\n      }\n    }\n    this.socket_callbacks = {};\n  }\n\n  /**\n   * Creates and connects a WebSocket for realtime updates\n   * @param {boolean} isReconnect If the socket is connection is a reconnect attempt\n   */\n  private createSocket(isReconnect = false) {\n    if (this.socket) {\n      return;\n    }\n    if (!this.WebSocket) {\n      throw new Error(\n        \"WebSocket is not defined, please provide a WebSocket implementation\",\n      );\n    }\n    if (this.closed) {\n      return;\n    }\n\n    let opened = false;\n\n    this.socket = new this.WebSocket(this.wsURL());\n    this.socket.binaryType = \"arraybuffer\";\n\n    this.addSocketCallback(this.socket, \"open\", () => {\n      opened = true;\n      if (isReconnect) {\n        this.events.emit(\"reconnected\");\n      }\n    });\n\n    this.addSocketCallback(this.socket, \"error\", (ev: Event) => {\n      // Expose websocket errors as unhandled events\n      // Allows for catching 404 and other network errors\n      const err = ev as ErrorEvent;\n      const is404Error = err.message?.includes(\"404\");\n\n      this.events.emit(\"connection_error\", {\n        type: \"404\",\n        message: err.message,\n      });\n\n      if (this.socket) this.socket.close();\n\n      if (!is404Error && !isReconnect && !opened) {\n        this.startPollingQueue();\n      }\n    });\n\n    this.addSocketCallback(this.socket, \"close\", () => {\n      setTimeout(() => {\n        this.socket = null;\n        this.createSocket(true);\n      }, 300);\n      if (opened) {\n        this.events.emit(\"status\", null);\n        this.events.emit(\"reconnecting\");\n      }\n    });\n\n    const isImageMessage = (event: MessageEvent) => {\n      if (typeof event.data === \"string\") {\n        return false;\n      }\n      if (ArrayBuffer && event.data instanceof ArrayBuffer) {\n        return true;\n      }\n      if (Buffer && Buffer.isBuffer(event.data)) {\n        return true;\n      }\n      return false;\n    };\n\n    this.addSocketCallback(this.socket, \"message\", (event) => {\n      this.events.emit(\"message\", event);\n\n      if (isImageMessage(event)) {\n        const image = WsClient.loadImageData(event.data);\n        this.events.emit(\"image_data\", image);\n      } else {\n        const msg = JSON.parse(event.data);\n\n        switch (msg.type) {\n          case \"status\":\n            if (msg.data.sid) {\n              this.clientId = msg.data.sid;\n            }\n            this.events.emit(\"status\", msg.data.status);\n            break;\n          case \"progress\":\n            this.events.emit(\"progress\", msg.data);\n            break;\n          case \"executing\":\n            this.events.emit(\"executing\", msg.data);\n            break;\n          case \"executed\":\n            this.events.emit(\"executed\", msg.data);\n            break;\n          case \"execution_start\":\n            this.events.emit(\"execution_start\", msg.data);\n            break;\n          case \"execution_error\":\n            this.events.emit(\"execution_error\", msg.data);\n            break;\n          case \"execution_cached\":\n            this.events.emit(\"execution_cached\", msg.data);\n            break;\n          case \"execution_interrupted\":\n            this.events.emit(\"execution_interrupted\", msg.data);\n            break;\n          default:\n            this.events.emit(msg.type, msg.data);\n            break;\n        }\n\n        const is_unhandled_message =\n          msg.type !== \"message\" &&\n          this.registered.includes(msg.type) === false;\n        if (is_unhandled_message) {\n          this.events.emit(\"unhandled\", msg);\n        }\n      }\n    });\n  }\n\n  /**\n   * Initializes sockets and realtime updates\n   *\n   * @deprecated move to client.connect()\n   */\n  init() {\n    this.createSocket();\n  }\n\n  closed = false;\n  /**\n   * Closes the WebSocket connection and cleans up event listeners\n   */\n  close() {\n    if (this.closed) {\n      return;\n    }\n    this.closed = true;\n    this.events.emit(\"close\");\n\n    this.disconnect();\n    this.events.removeAllListeners();\n  }\n\n  /**\n   * Connects to the WebSocket server by creating a new socket connection.\n   *\n   * @param {Object} options - The options for connecting to the server.\n   * @param {Object} options.polling - The options for polling.\n   * @param {boolean} options.polling.enabled - Whether polling is enabled.\n   * @param {number} [options.polling.interval] - The interval for polling.\n   * @param {Object} options.websocket - The options for the WebSocket connection.\n   * @param {boolean} options.websocket.enabled - Whether the WebSocket connection is enabled.\n   * @return {this} - The instance of the class.\n   */\n  connect({\n    polling = {\n      enabled: false,\n    },\n    websocket = {\n      enabled: true,\n    },\n  }: {\n    polling?: {\n      enabled: boolean;\n      interval?: number;\n    };\n    websocket?: {\n      enabled: boolean;\n    };\n  } = {}) {\n    if (polling?.enabled) {\n      this._polling_interval = polling.interval ?? this._polling_interval;\n      this.startPollingQueue();\n    }\n    if (websocket?.enabled) {\n      this.createSocket();\n    }\n    return this;\n  }\n\n  /**\n   * Disconnects the WebSocket connection and cleans up event listeners.\n   */\n  disconnect() {\n    if (!this.socket) {\n      process.nextTick(this._disconnectPolling.bind(this));\n    } else {\n      this._disconnectSocket();\n    }\n    this._disconnectPolling();\n  }\n\n  /**\n   * Disconnects the WebSocket connection and cleans up event listeners.\n   *\n   * @return {void} This function does not return anything.\n   */\n  _disconnectSocket() {\n    const { socket } = this;\n    if (!socket) return;\n    this.socket = null;\n    try {\n      if (socket.readyState === socket.OPEN) {\n        socket.close(1000, \"Client closed\");\n      }\n    } catch (error) {\n      // pass\n    }\n    this.removeSocketCallbacks();\n    if (\"removeAllListeners\" in socket) {\n      (socket.removeAllListeners as any)?.();\n    }\n  }\n\n  /**\n   * Disconnects the polling timer and sets it to null.\n   *\n   * @return {void}\n   */\n  _disconnectPolling() {\n    if (this._polling_timer !== null) {\n      clearInterval(this._polling_timer);\n      this._polling_timer = null;\n    }\n  }\n}\n","export type CachedFnOptions = {\r\n  expire_time?: number;\r\n  enabled?: boolean;\r\n};\r\n\r\nclass GlobalCacheHub {\r\n  static KEY = \"__COMFY_UI_CLIENT_CACHE__\";\r\n  protected _cached: Map<string, { result: any; expire: number }>;\r\n\r\n  constructor() {\r\n    this._cached = (globalThis as any)[GlobalCacheHub.KEY] || new Map();\r\n    (globalThis as any)[GlobalCacheHub.KEY] = this._cached;\r\n  }\r\n\r\n  clear() {\r\n    this._cached.clear();\r\n  }\r\n\r\n  get(key: string) {\r\n    return this._cached.get(key);\r\n  }\r\n\r\n  set(key: string, value: { result: any; expire: number }) {\r\n    this._cached.set(key, value);\r\n  }\r\n}\r\n\r\nexport class CachedFn {\r\n  static _defaultExpire: number = 60 * 1000;\r\n\r\n  protected expire_time_ms: number;\r\n  protected enabled: boolean;\r\n\r\n  protected _cached = new GlobalCacheHub();\r\n\r\n  protected cache_ns: string = \"\";\r\n\r\n  constructor(ns: string, options?: CachedFnOptions) {\r\n    this.expire_time_ms = options?.expire_time ?? CachedFn._defaultExpire;\r\n    this.enabled = options?.enabled ?? true;\r\n    this.cache_ns = ns;\r\n  }\r\n\r\n  public reset() {\r\n    this._cached.clear();\r\n  }\r\n\r\n  private _hashArgs(args: any[]): string {\r\n    try {\r\n      return JSON.stringify(args);\r\n    } catch (error) {\r\n      return args.toString();\r\n    }\r\n  }\r\n\r\n  public warp<ARGS extends any[], RET>(\r\n    key: string,\r\n    fn: (...args: ARGS) => RET\r\n  ): (...args: ARGS) => RET {\r\n    if (!this.enabled) {\r\n      return fn;\r\n    }\r\n    return (...args: ARGS) => {\r\n      const now = Date.now();\r\n      const argsHash = this._hashArgs(args);\r\n      const cacheKey = `${this.cache_ns}:${key}:${argsHash}`;\r\n      const hit_cached = this._cached.get(cacheKey);\r\n\r\n      if (hit_cached && hit_cached.expire > now) {\r\n        return hit_cached.result;\r\n      }\r\n\r\n      const result = fn(...args);\r\n      this._cached.set(cacheKey, { result, expire: now + this.expire_time_ms });\r\n      return result;\r\n    };\r\n  }\r\n}\r\n","import { WorkflowOutputResolver } from \"./client/types\";\nimport { isNone } from \"./utils/misc\";\nimport { WorkflowOutput } from \"./workflow/types\";\n\nexport const RESOLVERS = {\n  image: ((acc, output, { client }) => {\n    if (output === null || output === undefined) {\n      return acc;\n    }\n\n    const output_images: {\n      filename?: string;\n      subfolder?: string;\n      type: string;\n    }[] = (output?.images || []) as any;\n\n    const images_url = output_images\n      .map((image) => {\n        const { filename, subfolder, type } = image;\n        if (isNone(filename) || isNone(subfolder) || type !== \"output\") {\n          return null;\n        }\n        return client.viewURL(filename, subfolder, type);\n      })\n      .filter(Boolean) as string[];\n\n    const images = images_url.map((image) => ({\n      type: \"url\" as const,\n      data: image,\n    }));\n    return {\n      ...acc,\n      images: [...acc.images, ...images],\n    };\n  }) as WorkflowOutputResolver<WorkflowOutput>,\n};\n","import { CachedFn } from \"../utils/CachedFn\";\nimport type { Plugin } from \"../plugins/Plugin\";\nimport { WsClient } from \"./WsClient\";\nimport { RESOLVERS } from \"../builtins\";\nimport {\n  WorkflowOutputResolver,\n  EnqueueOptions,\n  IComfyApiConfig,\n} from \"./types\";\nimport { ComfyUIClientResponseTypes } from \"./response.types\";\nimport { WorkflowOutput } from \"../workflow/types\";\n\n/**\n * The Client class provides a high-level interface for interacting with the ComfyUI API.\n *\n * @extends WsClient\n *\n * @example\n * ```typescript\n * const client = new Client({\n *  api_host: \"YOUR_API_HOST\",\n *  clientId: \"YOUR_CLIENT_ID\",\n * });\n *\n * const extensions = await client.getEmbeddings();\n * console.log(extensions);\n * ```\n */\nexport class Client extends WsClient {\n  private _cached_fn: CachedFn;\n\n  // NOTE: useless ... just for debug\n  private _plugins = [] as Plugin[];\n\n  constructor(\n    config: Omit<IComfyApiConfig, \"fetch\" | \"WebSocket\"> & {\n      // NOTE: This is written to reduce type issues... because sometimes `as any` is unavoidable\n      fetch?: any;\n      WebSocket?: any;\n    },\n  ) {\n    super(config);\n\n    const cache_ns = `${config.api_host}`;\n    this._cached_fn = new CachedFn(cache_ns, config.cache);\n  }\n\n  /**\n   * Use a plugin by calling its install method on this instance.\n   *\n   * @param {Plugin} plugin - The plugin to install.\n   */\n  use(plugin: Plugin) {\n    plugin.install(this);\n    this._plugins.push(plugin);\n  }\n\n  /**\n   * Gets a list of extension urls\n   * @returns An array of script urls to import\n   */\n  async getExtensions(): Promise<string[]> {\n    const invoke = async () => {\n      const resp = await this.fetchApi(\"/extensions\", { cache: \"no-store\" });\n      return await resp.json();\n    };\n    const cached = this._cached_fn.warp(\"extensions\", invoke);\n    return cached();\n  }\n\n  /**\n   * Gets a list of embedding names\n   * @returns An array of script urls to import\n   */\n  async getEmbeddings(): Promise<string[]> {\n    const invoke = async () => {\n      const resp = await this.fetchApi(\"/embeddings\", { cache: \"no-store\" });\n      return await resp.json();\n    };\n    const cached = this._cached_fn.warp(\"embeddings\", invoke);\n    return cached();\n  }\n\n  /**\n   * Loads node object definitions for the graph\n   * @returns {Promise<ComfyUIClientResponseTypes.ObjectInfo>} The object info for the graph\n   */\n  async getNodeDefs(): Promise<ComfyUIClientResponseTypes.ObjectInfo> {\n    const invoke = async () => {\n      const resp = await this.fetchApi(\"/object_info\", { cache: \"no-store\" });\n      const node_defs = await resp.json();\n      return node_defs;\n    };\n    const cached = this._cached_fn.warp(\"object_info\", invoke);\n    return cached();\n  }\n\n  /**\n   * Clears the node object definitions cache\n   */\n  resetCache() {\n    this._cached_fn.reset();\n  }\n\n  /**\n   *\n   * @param {number} queue_index The index at which to queue the prompt, passing -1 will insert the prompt at the front of the queue\n   * @param {Object} options\n   * @param {Object} options.prompt The prompt to queue\n   * @param {Object} options.workflow This png info to be added to resulting image\n   * @returns {Promise<ComfyUIClientResponseTypes.QueuePrompt>} The response from the server\n   */\n  async queuePrompt(\n    queue_index: number,\n    { prompt, workflow }: { prompt: any; workflow: any },\n  ): Promise<ComfyUIClientResponseTypes.QueuePrompt> {\n    const body: Record<string, unknown> = {\n      client_id: this.clientId,\n      prompt,\n      extra_data: { extra_pnginfo: { workflow } },\n    };\n\n    if (queue_index === -1) {\n      body.front = true;\n    } else if (queue_index !== 0) {\n      body.number = queue_index;\n    }\n\n    const res = await this.fetchApi(\"/prompt\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n\n    if (res.status !== 200) {\n      const error_resp = await res.text();\n      try {\n        const error_data = JSON.parse(error_resp);\n        // TODO throw Error class\n        throw { response: error_data };\n      } catch (error) {\n        throw { response: error_resp };\n      }\n    }\n\n    return await res.json();\n  }\n\n  /**\n   * Loads a list of items (queue or history)\n   * @param {\"queue\" | \"history\"} type The type of items to load, queue or history\n   * @returns The items of the specified type grouped by their status\n   */\n  async getItems(type: \"history\"): ReturnType<Client[\"getHistory\"]>;\n  async getItems(type: \"queue\"): ReturnType<Client[\"getQueue\"]>;\n  async getItems(type: \"queue\" | \"history\"): Promise<any> {\n    if (type === \"queue\") {\n      return this.getQueue();\n    }\n    return this.getHistory();\n  }\n\n  /**\n   * Gets the current state of the queue\n   * @returns The currently running and queued items\n   */\n  async getQueue(): Promise<{\n    Running: Array<Record<string, unknown>>;\n    Pending: Array<Record<string, unknown>>;\n  }> {\n    try {\n      const res = await this.fetchApi(\"/queue\");\n      const data = await res.json();\n      return {\n        Running: data.queue_running.map((prompt: any) => ({\n          prompt,\n          remove: { name: \"Cancel\", cb: () => this.interrupt() },\n        })),\n        Pending: data.queue_pending.map((prompt: any) => ({ prompt })),\n      };\n    } catch (error) {\n      console.error(error);\n      return { Running: [], Pending: [] };\n    }\n  }\n\n  /**\n   * Gets the prompt execution history\n   * @returns Prompt history including node outputs\n   */\n  async getHistory(max_items = 200): Promise<{\n    History: Array<{\n      // [index, prompt_id, prompt, payload, outputs_node]\n      prompt: [number, string, any, any, any];\n      outputs: Record<string, unknown>;\n      status: {\n        status_str: string;\n        completed: boolean;\n        messages: any[];\n      };\n    }>;\n  }> {\n    try {\n      const res = await this.fetchApi(`/history?max_items=${max_items}`);\n      return { History: Object.values(await res.json()) };\n    } catch (error) {\n      console.error(error);\n      return { History: [] };\n    }\n  }\n\n  /**\n   * Gets system & device stats\n   * @returns {ComfyUIClientResponseTypes.SystemStatsRoot} System stats such as python version, OS, per device info\n   */\n\n  async getSystemStats(): Promise<ComfyUIClientResponseTypes.SystemStatsRoot> {\n    const res = await this.fetchApi(\"/system_stats\");\n    return res.json();\n  }\n\n  /**\n   * Sends a POST request to the API\n   * @param {\"queue\" | \"history\"} type The endpoint to post to\n   * @param {any} body Optional POST data\n   */\n  private async postApi(type: string, body: any) {\n    await this.fetchApi(\"/\" + type, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body ? JSON.stringify(body) : undefined,\n    });\n  }\n\n  /**\n   * Deletes an item from the specified list\n   * @param {\"queue\" | \"history\"} type The type of item to delete, queue or history\n   * @param {any} id The id of the item to delete\n   */\n  async deleteItem(type: \"queue\" | \"history\", id: any) {\n    await this.postApi(type, { delete: [id] });\n  }\n\n  /**\n   * Clears the specified list\n   * @param {\"queue\" | \"history\"} type The type of list to clear, queue or history\n   */\n  async clearItems(type: \"queue\" | \"history\") {\n    await this.postApi(type, { clear: true });\n  }\n\n  /**\n   * Interrupts the execution of the running prompt\n   */\n  async interrupt() {\n    await this.postApi(\"interrupt\", null);\n  }\n\n  /**\n   * Free up memory by unloading models and freeing memory\n   */\n  async free(params?: { unload_models?: boolean; free_memory?: boolean }) {\n    await this.postApi(\"free\", params);\n  }\n\n  /**\n   * Gets user configuration data and where data should be stored\n   * @returns { Promise<{ storage: \"server\" | \"browser\", users?: Promise<string, unknown>, migrated?: boolean }> }\n   */\n  async getUserConfig() {\n    return (await this.fetchApi(\"/users\")).json();\n  }\n\n  /**\n   * Creates a new user\n   * @param { string } username\n   * @returns The fetch response\n   */\n  async createUser(username: string): Promise<Response> {\n    return this.fetchApi(\"/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username }),\n    });\n  }\n\n  /**\n   * Gets all setting values for the current user\n   * @returns { Promise<string, unknown> } A dictionary of id -> value\n   */\n  async getSettings(): Promise<Record<string, unknown>> {\n    return (await this.fetchApi(\"/settings\")).json();\n  }\n\n  /**\n   * Gets a setting for the current user\n   * @param { string } id The id of the setting to fetch\n   * @returns { Promise<unknown> } The setting value\n   */\n  async getSetting(id: string): Promise<unknown> {\n    return (await this.fetchApi(`/settings/${encodeURIComponent(id)}`)).json();\n  }\n\n  /**\n   * Stores a dictionary of settings for the current user\n   * @param { Record<string, unknown> } settings Dictionary of setting id -> value to save\n   * @returns { Promise<void> }\n   */\n  async storeSettings(settings: Record<string, unknown>): Promise<Response> {\n    return this.fetchApi(`/settings`, {\n      method: \"POST\",\n      body: JSON.stringify(settings),\n    });\n  }\n\n  /**\n   * Stores a setting for the current user\n   * @param { string } id The id of the setting to update\n   * @param { unknown } value The value of the setting\n   * @returns { Promise<void> }\n   */\n  async storeSetting(id: string, value: unknown): Promise<Response> {\n    return this.fetchApi(`/settings/${encodeURIComponent(id)}`, {\n      method: \"POST\",\n      body: JSON.stringify(value),\n    });\n  }\n\n  /**\n   * Gets a user data file for the current user\n   * @param { string } file The name of the userdata file to load\n   * @param { RequestInit } [options]\n   * @returns { Promise<unknown> } The fetch response object\n   */\n  async getUserData(file: string, options?: RequestInit): Promise<Response> {\n    return this.fetchApi(`/userdata/${encodeURIComponent(file)}`, options);\n  }\n\n  /**\n   * Stores a user data file for the current user\n   * @param { string } file The name of the userdata file to save\n   * @param { any } data The data to save to the file\n   * @param { RequestInit & { stringify?: boolean, throwOnError?: boolean } } [options]\n   * @returns { Promise<void> }\n   */\n  async storeUserData(\n    file: string,\n    data: any,\n    options?: RequestInit & { stringify?: boolean; throwOnError?: boolean },\n  ): Promise<void> {\n    const resp = await this.fetchApi(`/userdata/${encodeURIComponent(file)}`, {\n      method: \"POST\",\n      body: options?.stringify ? JSON.stringify(data) : data,\n      ...options,\n    });\n    if (resp.status !== 200) {\n      const error = await resp.text();\n      throw new Error(\n        `Error storing user data file '${file}': ${resp.status} ${error}`,\n      );\n    }\n  }\n\n  // ----------------- get status ++ -----------------\n\n  /**\n   * Retrieves the list of samplers from the node definitions.\n   *\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the sampler names.\n   */\n  async getSamplers() {\n    const node_config = await this.getNodeDefs();\n    // find KSampler node\n    const node = node_config[\"KSampler\"];\n    const sampler_name = node?.input?.required?.[\"sampler_name\"]?.[0] || [];\n    return sampler_name as string[];\n  }\n\n  /**\n   * Retrieves the list of schedulers from the node definitions.\n   *\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the scheduler names.\n   */\n  async getSchedulers() {\n    const node_config = await this.getNodeDefs();\n    // find Scheduler node\n    const node = node_config[\"KSampler\"];\n    const scheduler_name = node?.input?.required?.[\"scheduler\"]?.[0] || [];\n    return scheduler_name as string[];\n  }\n\n  /**\n   * Retrieves the list of model names from the node definitions.\n   *\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the model names.\n   */\n  async getSDModels() {\n    const node_config = await this.getNodeDefs();\n    // find CheckpointLoaderSimple node\n    const node = node_config[\"CheckpointLoaderSimple\"];\n    const model_name = node?.input?.required?.[\"ckpt_name\"]?.[0] || [];\n    return model_name as string[];\n  }\n\n  /**\n   * Retrieves the list of model names from the node definitions.\n   *\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the model names.\n   */\n  async getCNetModels() {\n    const node_config = await this.getNodeDefs();\n    // find ControlNetLoader node\n    const node = node_config[\"ControlNetLoader\"];\n    const model_name = node?.input?.required?.[\"control_net_name\"]?.[0] || [];\n    return model_name as string[];\n  }\n\n  /**\n   * Retrieves the list of model names from the node definitions for the UpscaleModelLoader node.\n   *\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the model names.\n   */\n  async getUpscaleModels() {\n    const node_config = await this.getNodeDefs();\n    // find UpscaleModelLoader node\n    const node = node_config[\"UpscaleModelLoader\"];\n    const model_name = node?.input?.required?.[\"model_name\"]?.[0] || [];\n    return model_name as string[];\n  }\n\n  /**\n   * Retrieves the list of hypernetwork names from the node definitions.\n   *\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the hypernetwork names.\n   */\n  async getHyperNetworks() {\n    const node_config = await this.getNodeDefs();\n    // find HypernetworkLoader node\n    const node = node_config[\"HypernetworkLoader\"];\n    const model_name = node?.input?.required?.[\"hypernetwork_name\"]?.[0] || [];\n    return model_name as string[];\n  }\n\n  /**\n   * Retrieves the list of LoRAs from the node definitions.\n   *\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the LoRAs.\n   */\n  async getLoRAs() {\n    const node_config = await this.getNodeDefs();\n    // find LoraLoader node\n    const node = node_config[\"LoraLoader\"];\n    const model_name = node?.input?.required?.[\"lora_name\"]?.[0] || [];\n    return model_name as string[];\n  }\n\n  /**\n   * Retrieves the list of VAE names from the node definitions.\n   *\n   * @return {Promise<string[]>} A promise that resolves to an array of strings representing the VAE names.\n   */\n  async getVAEs() {\n    const node_config = await this.getNodeDefs();\n    // find VAELoader node\n    const node = node_config[\"VAELoader\"];\n    const model_name = node?.input?.required?.[\"vae_name\"]?.[0] || [];\n    return model_name as string[];\n  }\n\n  // ----------------- Prompt ++ -----------------\n\n  /**\n   * Retrieves the status of a prompt based on the provided prompt ID.\n   *\n   * @param {string} prompt_id - The ID of the prompt to check status for.\n   * @return {Object} Object containing the running, pending, and done status of the prompt.\n   */\n  async getPromptStatus(prompt_id: string) {\n    const { Running, Pending } = await this.getQueue();\n    const running = Running.some(\n      (task: any) => task?.prompt?.[1] === prompt_id,\n    );\n    const pending = Pending.some(\n      (task: any) => task?.prompt?.[1] === prompt_id,\n    );\n    const done = !running && !pending;\n    return {\n      running,\n      pending,\n      done,\n    };\n  }\n\n  /**\n   * Retrieves the outputs of a prompt with the given ID from the history.\n   *\n   * @param {string} prompt_id - The ID of the prompt to retrieve the outputs for.\n   * @return {Promise<any>} A promise that resolves to the outputs of the prompt.\n   * @throws {Error} If the prompt with the given ID is not found in the history or if it failed with a non-\"success\" status.\n   */\n  async getPromptOutputs(prompt_id: string) {\n    const { History: history } = await this.getHistory();\n    const item = history.find((item) => item.prompt[1] === prompt_id);\n    if (!item) {\n      throw new Error(`Prompt [${prompt_id}] not found in history`);\n    }\n\n    const status = item.status.status_str;\n    if (status !== \"success\") {\n      throw new Error(`Prompt [${prompt_id}] failed with status: ${status}`);\n    }\n\n    return item.outputs;\n  }\n\n  /**\n   * Retrieves the result of a prompt with the given ID, resolved using the provided resolver.\n   *\n   * @param {string} prompt_id - The ID of the prompt to retrieve the result for.\n   * @param {WorkflowOutputResolver<T>} resolver - The resolver to use when resolving the prompt result.\n   * @return {Promise<WorkflowOutput<T>>} A promise that resolves to the result of the prompt.\n   */\n  async getPromptResult<T>(\n    prompt_id: string,\n    resolver: WorkflowOutputResolver<T>,\n  ): Promise<WorkflowOutput<T>>;\n  async getPromptResult(prompt_id: string): Promise<WorkflowOutput>;\n  async getPromptResult(\n    prompt_id: string,\n    resolver?: any,\n  ): Promise<WorkflowOutput> {\n    const outputs = await this.getPromptOutputs(prompt_id);\n    if (typeof resolver !== \"function\") {\n      resolver = RESOLVERS.image;\n    }\n    return Object.entries(outputs).reduce(\n      (acc, [node_id, output]) =>\n        resolver(acc, output, {\n          client: this,\n          prompt_id,\n          node_id,\n        }),\n      {\n        images: [],\n        prompt_id,\n        data: null,\n      } as WorkflowOutput,\n    );\n  }\n\n  /**\n   * Asynchronously waits for the prompt with the provided ID to be done.\n   *\n   * @param {string} prompt_id - The ID of the prompt to wait for.\n   * @param {number} [polling_ms=1000] - The number of milliseconds to wait between checks.\n   * @return {void}\n   */\n  async waitForPrompt(prompt_id: string, polling_ms = 1000) {\n    let prompt_status = await this.getPromptStatus(prompt_id);\n    while (!prompt_status.done) {\n      await new Promise((resolve) => setTimeout(resolve, polling_ms));\n      prompt_status = await this.getPromptStatus(prompt_id);\n    }\n  }\n\n  /**\n   * Asynchronously waits for the prompt with the provided ID to be done,\n   * using a WebSocket connection to receive updates.\n   *\n   * @param {string} prompt_id - The ID of the prompt to wait for.\n   * @param {WorkflowOutputResolver<T>} resolver - A function to resolve the output of the prompt.\n   * @return {Promise<WorkflowOutput<T>>} A promise that resolves with the output of the prompt.\n   */\n  async waitForPromptWebSocket<T>(\n    prompt_id: string,\n    resolver: WorkflowOutputResolver<T>,\n  ) {\n    const output: WorkflowOutput<T> = {\n      images: [],\n      prompt_id,\n      data: null as T,\n    };\n    return new Promise<WorkflowOutput<T>>((resolve, reject) => {\n      const offEvent2 = this.on(\"image_data\", (data) => {\n        // TODO: should hook web-socket resolver ?\n        output.images.push({ type: \"buff\", data: data.image, mime: data.mime });\n      });\n      const offEvent = this.on(\"executed\", (data) => {\n        const {\n          prompt_id: current_prompt_id,\n          output: executed_output,\n          node: node_id,\n        } = data;\n        if (current_prompt_id !== prompt_id) {\n          return;\n        }\n        const resolved = resolver(output, executed_output, {\n          client: this,\n          prompt_id,\n          node_id,\n        });\n        resolve(resolved);\n        offEvent();\n        offEvent2();\n      });\n    });\n  }\n\n  /**\n   * Asynchronously enqueues a prompt with optional workflow and random seed.\n   *\n   * @param {Record<string, unknown>} prompt - The prompt to enqueue.\n   * @param {Object} [options] - The options for enqueueing the prompt.\n   * @param {Record<string, unknown>} [options.workflow] - The workflow for the prompt.\n   * @return {Promise<{ prompt_id: string; number: number; node_errors: any; }>} A promise that resolves with the enqueued prompt response.\n   * @throws {Error} If there is an error in the response.\n   */\n  async _enqueue_prompt(\n    prompt: Record<string, unknown>,\n    options?: {\n      workflow?: Record<string, unknown>;\n    },\n  ) {\n    const resp = await this.queuePrompt(0, {\n      prompt,\n      workflow: options?.workflow,\n    });\n    if (\"error\" in resp) {\n      // TODO new Error class\n      throw new Error(resp.error);\n    }\n    return resp;\n  }\n\n  /**\n   * Asynchronously runs a prompt with the provided options.\n   *\n   * This function does not use WebSocket, but uses polling to get the result\n   * So if your workflow contains custom ws events, this function will not be able to get these events\n   *\n   * @param {Record<string, unknown>} prompt - The prompt to run.\n   * @param {Object} options - The options for running the prompt.\n   * @param {Record<string, unknown>} options.workflow - The workflow for the prompt, It will be added to the png info of the generated image.\n   * @param {number} [options.polling_ms=1000] - The number of milliseconds to polling query prompt result.\n   * @return {Promise<WorkflowOutput>} A promise that resolves with the prompt result.\n   *\n   * @deprecated Use `enqueue_polling` instead\n   */\n  async runPrompt(\n    prompt: Record<string, unknown>,\n    options?: {\n      workflow?: Record<string, unknown>;\n      polling_ms?: number;\n    },\n  ) {\n    const resp = await this._enqueue_prompt(prompt, options);\n    const prompt_id = resp.prompt_id;\n    await this.waitForPrompt(prompt_id, options?.polling_ms);\n    return await this.getPromptResult(prompt_id, RESOLVERS.image);\n  }\n\n  /**\n   * Asynchronously enqueues a prompt and waits for the corresponding prompt websocket.\n   *\n   * This function does not use WebSocket, but uses polling to get the result\n   * So if your workflow contains custom ws events, this function will not be able to get these events\n   *\n   * @param {Record<string, unknown>} prompt - The prompt to enqueue.\n   * @param {EnqueueOptions<T>} [options] - The options for enqueueing the prompt.\n   * @return {Promise<WorkflowOutput<T>>} A promise that resolves with the prompt result.\n   */\n  async enqueue_polling<T>(\n    prompt: Record<string, unknown>,\n    options?: EnqueueOptions<T>,\n  ): Promise<WorkflowOutput<T>>;\n  async enqueue_polling(\n    prompt: Record<string, unknown>,\n    options?: EnqueueOptions,\n  ): Promise<WorkflowOutput>;\n  async enqueue_polling(\n    prompt: Record<string, unknown>,\n    options?: any,\n  ): Promise<WorkflowOutput> {\n    if (typeof options?.progress === \"function\") {\n      throw new Error(\"progress option is not supported in polling mode\");\n    }\n\n    const resp = await this._enqueue_prompt(prompt, options);\n    const prompt_id = resp.prompt_id;\n    await this.waitForPrompt(prompt_id, options?.polling_ms);\n    return await this.getPromptResult(\n      prompt_id,\n      options?.resolver ?? RESOLVERS.image,\n    );\n  }\n\n  /**\n   * Enqueues a prompt and waits for the corresponding prompt websocket.\n   *\n   * @param {Record<string, unknown>} prompt - The prompt to enqueue.\n   * @param {{ workflow?: Record<string, unknown>; disable_random_seed?: boolean; }} [options] - The options for enqueueing the prompt.\n   * @param {Record<string, unknown>} [options.workflow] - This data for PNG info.\n   * @param {boolean} [options.disable_random_seed] - Whether to disable random seed.\n   * @return {Promise<WorkflowOutput>} A promise that resolves with the prompt result.\n   */\n  async enqueue<T>(\n    prompt: Record<string, unknown>,\n    options?: EnqueueOptions<T>,\n  ): Promise<WorkflowOutput<T>>;\n  async enqueue(\n    prompt: Record<string, unknown>,\n    options?: EnqueueOptions,\n  ): Promise<WorkflowOutput>;\n  async enqueue(prompt: Record<string, unknown>, options?: any) {\n    const resp = await this._enqueue_prompt(prompt, options);\n    const prompt_id = resp.prompt_id;\n\n    const off_progress = this.on_progress(options?.progress, prompt_id);\n    try {\n      return await this.waitForPromptWebSocket(\n        prompt_id,\n        options?.resolver ?? RESOLVERS.image,\n      );\n    } finally {\n      off_progress();\n    }\n  }\n\n  /**\n   * Listens for progress updates for a specific task.\n   *\n   * @param {EnqueueOptions[\"progress\"]} fn - The progress callback function.\n   * @param {string} task_id - The ID of the task to listen for progress updates.\n   * @return {Function} A function that can be used to remove the progress listener.\n   */\n  on_progress(fn: EnqueueOptions[\"progress\"], task_id: string) {\n    if (!fn) return () => {};\n    return this.on(\"progress\", (_data) => {\n      const data = {\n        // old api response type:\n        ...(\"progress\" in _data ? { ...(_data as any).progress } : {}),\n        // new api: https://github.com/StableCanvas/comfyui-client/issues/6\n        ..._data,\n      };\n      if (data.prompt_id === task_id) {\n        fn(data);\n      }\n    });\n  }\n}\n","export class Disposable {\n  protected _disposed = false;\n  protected _disposed_cbs = [] as any[];\n  public dispose() {\n    if (this._disposed) {\n      return;\n    }\n    this._disposed = true;\n\n    this._disposed_cbs.forEach((cb) => {\n      if (typeof cb === \"function\") {\n        cb();\n      }\n    });\n  }\n  public _connect(cb: () => void) {\n    if (this._disposed) {\n      cb();\n      return;\n    }\n    this._disposed_cbs.push(cb);\n  }\n}\n","import { Client } from \"../client/Client\";\n\nexport namespace NSPipeline {\n  // prettier-ignore\n  export const samplers = [\n    'euler',            'euler_cfg_pp',\n    'euler_ancestral',  'euler_ancestral_cfg_pp',\n    'heun',             'heunpp2',\n    'dpm_2',            'dpm_2_ancestral',\n    'lms',              'dpm_fast',\n    'dpm_adaptive',     'dpmpp_2s_ancestral',\n    'dpmpp_sde',        'dpmpp_sde_gpu',\n    'dpmpp_2m',         'dpmpp_2m_sde',\n    'dpmpp_2m_sde_gpu', 'dpmpp_3m_sde',\n    'dpmpp_3m_sde_gpu', 'ddpm',\n    'lcm',              'ipndm',\n    'ipndm_v',          'deis',\n    'ddim',             'uni_pc',\n    'uni_pc_bh2'\n  ] as const;\n  export const schedulers = [\n    \"normal\",\n    \"karras\",\n    \"exponential\",\n    \"sgm_uniform\",\n    \"simple\",\n    \"ddim_uniform\",\n    \"beta\",\n  ] as const;\n\n  export type PipeContext = {\n    seed: number;\n    steps: number;\n    cfg: number;\n    sampler_name: (typeof samplers)[number] | ({} & string);\n    scheduler: (typeof schedulers)[number] | ({} & string);\n    denoise: number;\n    width: number;\n    height: number;\n    batch_size: number;\n    ckpt_name: string;\n    positive: string;\n    negative: string;\n\n    /**\n     * NOTE: dependence custom node: `ETN_LoadImageBase64` and `ETN_LoadMaskBase64`\n     */\n    input_image: Buffer | null;\n    input_mask: Buffer | null;\n    grow_mask_by: number;\n\n    client: Client | null;\n  };\n}\n","import { Client } from \"../client/Client\";\nimport { WorkflowOutputResolver } from \"../client/types\";\nimport type { WorkflowOutput, IWorkflow } from \"./types\";\nimport { RESOLVERS } from \"../builtins\";\nimport { ComfyUIClientEvents, ComfyUiWsTypes } from \"../client/ws.types\";\nimport EventEmitter from \"eventemitter3\";\nimport { Disposable } from \"../utils/Disposable\";\n\nexport class InvokedWorkflow<T = unknown> extends Disposable {\n  protected task_id?: string;\n\n  protected _result: WorkflowOutput<T> = {\n    images: [],\n    prompt_id: \"\",\n  };\n\n  is_done = false;\n  enqueued = false;\n\n  workflow: IWorkflow;\n  client: Client;\n  resolver: WorkflowOutputResolver<T>;\n\n  constructor(\n    readonly options: {\n      workflow: IWorkflow;\n      client: Client;\n      resolver?: WorkflowOutputResolver<T>;\n      progress?: (p: ComfyUiWsTypes.Messages.Progress) => void;\n    },\n  ) {\n    super();\n    const { workflow, client, resolver } = options;\n    this.workflow = workflow;\n    this.client = client;\n    this.resolver = resolver || (RESOLVERS.image as any);\n  }\n\n  protected _enqueue_guard() {\n    if (this.enqueued) {\n      throw new Error(\"This workflow is already enqueued\");\n    }\n    this.enqueued = true;\n  }\n\n  protected _task_id_guard() {\n    if (!this.task_id) {\n      throw new Error(\n        \"This workflow is not enqueued and the execution status cannot be interrupt\",\n      );\n    }\n    return this.task_id;\n  }\n\n  protected _done_guard() {\n    if (this._disposed || this.is_done) {\n      throw new Error(\"This workflow has been disposed\");\n    }\n  }\n\n  protected _ws_guard() {\n    if (this.client.socket === null) {\n      throw new Error(\"WebSocket is not connected\");\n    }\n  }\n\n  protected is_owner_event(...args: any[]) {\n    const [data] = (args as any[]) || [];\n    const { task_id } = this;\n    if (!task_id) return false;\n    if (typeof data !== \"object\" || data === null) return false;\n    if (!(\"prompt_id\" in data) || data.prompt_id !== task_id) return false;\n    return true;\n  }\n\n  /**\n   * Adds an event listener for the specified event type.\n   */\n  on<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\n    type: T,\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\n    options?: any,\n  ) {\n    this._done_guard();\n    const { client } = this;\n    const off = client.on(type, (...args) => {\n      if (!this.is_owner_event(...args)) return;\n      callback(...args);\n    });\n    this._connect(off);\n    return off;\n  }\n\n  /**\n   * Adds an once event listener for the specified event type.\n   */\n  once<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\n    type: T,\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\n    options?: any,\n  ) {\n    this._done_guard();\n    const { client } = this;\n    const off = client.on(type, (...args) => {\n      if (!this.is_owner_event(...args)) return;\n      callback(...args);\n      off();\n    });\n    this._connect(off);\n    return off;\n  }\n\n  /**\n   * Initiates the workflow by enqueuing the prompt and setting up the task ID.\n   *\n   * @return {void}\n   */\n  public async enqueue() {\n    this._enqueue_guard();\n\n    const { client, workflow } = this;\n    const { prompt, workflow: wf } = workflow;\n\n    const { prompt_id } = await client._enqueue_prompt(prompt, {\n      workflow: wf,\n    });\n    this.task_id = prompt_id;\n\n    this.hook_progress();\n    this.hook_image_data();\n  }\n\n  protected async hook_progress() {\n    const { progress } = this.options;\n    const { task_id: _task_id } = this;\n    if (!progress) return;\n    if (typeof progress !== \"function\") {\n      throw new Error(\"progress hook must be a function\");\n    }\n    if (typeof _task_id !== \"string\") {\n      throw new Error(\"this workflow is not enqueued\");\n    }\n    const off_progress = this.client.on_progress(progress, _task_id);\n    this._connect(off_progress);\n  }\n\n  protected async hook_image_data() {\n    const { client } = this;\n\n    const off_event = client.on(\"image_data\", (data) => {\n      // NOTE: Actually, it is impossible to determine whether it is the image of the current workflow, so the internal value is_done is used to determine, because comfyui is non-concurrent by default\n      // TODO: Use message judgment, that is, use the last `executed` message to determine which workflow result it is\n      if (this.is_done) {\n        return;\n      }\n      this._result.images.push({\n        type: \"buff\",\n        data: data.image,\n        mime: data.mime,\n      });\n    });\n\n    this._connect(off_event);\n  }\n\n  protected resolve_to_result(data: ComfyUiWsTypes.Messages.Executed) {\n    const { client, resolver } = this;\n    const { output, prompt_id, node } = data;\n\n    this._result = resolver(this._result, output, {\n      client,\n      prompt_id: prompt_id,\n      node_id: node,\n    });\n  }\n\n  /**\n   * Retrieves the execution status of the workflow.\n   *\n   * @return {Promise<status>} A promise that resolves with the execution status of the workflow.\n   */\n  public async query() {\n    const task_id = this._task_id_guard();\n    return this.client.getPromptStatus(task_id);\n  }\n\n  /**\n   * Interrupts the execution of the workflow if it is currently enqueued.\n   * Throws an error if the workflow is not enqueued or if the execution status cannot be interrupted.\n   *\n   * @return {Promise<void>} A promise that resolves when the interrupt is successful or rejects with an error.\n   * @throws {Error} If the workflow is not enqueued or if the execution status cannot be interrupted.\n   */\n  public async interrupt() {\n    const id = this._task_id_guard();\n    const { pending, running, done } = await this.query();\n    if (done) return;\n    if (pending) {\n      this.client.deleteItem(\"queue\", id);\n      return;\n    }\n    if (running) {\n      return this.client.interrupt();\n    }\n    throw new Error(`wrong task status, id: ${id}`);\n  }\n\n  protected async collect_result() {\n    const { client, resolver } = this;\n    const task_id = this._task_id_guard();\n    const result = await client.getPromptResult(\n      task_id,\n      resolver ?? RESOLVERS.image,\n    );\n    this._result.images = [...this._result.images, ...result.images];\n    this._result.data = this._result.data ?? result.data;\n    return this._result;\n  }\n\n  protected when_interrupted(\n    cb: (data: ComfyUiWsTypes.Messages.ExecutionInterrupted) => any,\n  ) {\n    const task_id = this._task_id_guard();\n    this._connect(\n      this.client.on(\"execution_interrupted\", (data) => {\n        if (data.prompt_id === task_id) {\n          cb(data);\n        }\n      }),\n    );\n  }\n\n  /**\n   * Waits for the workflow to complete and returns the result.\n   *\n   * *This function does not rely on WebSocket Events, so it will lose events output by WebSocket node\n   *\n   * @param {Object} options - options for waiting\n   * @param {number} [options.polling_ms=1000] - polling interval in milliseconds\n   * @return {Promise} promise that resolves with the result of the workflow\n   */\n  public async wait_polling({ polling_ms }: { polling_ms?: number } = {}) {\n    this._done_guard();\n    const task_id = this._task_id_guard();\n\n    const { client } = this;\n    return new Promise<WorkflowOutput>(async (resolve, reject) => {\n      const done = () => {\n        this.is_done = true;\n        this.dispose();\n      };\n      this.when_interrupted((data) => {\n        reject(new Error(\"Execution Interrupted\"));\n        done();\n      });\n\n      try {\n        await client.waitForPrompt(task_id, polling_ms ?? 1000);\n        const result = await this.collect_result();\n        resolve(result);\n      } catch (error) {\n        reject(error);\n      } finally {\n        done();\n      }\n    });\n  }\n\n  /**\n   * Waits for the workflow to complete and returns the result.\n   *\n   * @return {Promise<WorkflowOutput>} promise that resolves with the result of the workflow\n   */\n  public async wait() {\n    this._done_guard();\n    this._ws_guard();\n\n    const task_id = this._task_id_guard();\n\n    return new Promise<WorkflowOutput>((resolve, reject) => {\n      const done = () => {\n        this.is_done = true;\n        this.dispose();\n      };\n      const maybe_done = async () => {\n        try {\n          const status = await this.query();\n          if (!status.done) {\n            return;\n          }\n          resolve(this._result);\n          done();\n        } catch (error) {\n          reject(error);\n          done();\n        }\n      };\n      this.when_interrupted((data) => {\n        reject(new Error(\"Execution Interrupted\"));\n        done();\n      });\n      this._connect(\n        this.client.on(\"executed\", async (data) => {\n          if (data.prompt_id !== task_id) {\n            return;\n          }\n          this.resolve_to_result(data);\n          maybe_done();\n        }),\n      );\n      this._connect(\n        this.client.on(\"execution_success\", async (data) => {\n          if (data.prompt_id !== task_id) {\n            return;\n          }\n          maybe_done();\n        }),\n      );\n    });\n  }\n}\n","import { Client } from \"../client/Client\";\nimport { InvokedWorkflow } from \"./InvokedWorkflow\";\nimport { WorkflowOutputResolver } from \"../client/types\";\nimport { ComfyUINodeTypes } from \"../schema/comfyui.node.types\";\nimport { WorkflowOutput, WorkflowPromptNode } from \"./types\";\nimport { IWorkflow } from \"./types\";\nimport { ComfyUiWsTypes } from \"../client/ws.types\";\n\nconst deepClone: <T>(obj: T) => T = globalThis.structuredClone\n  ? globalThis.structuredClone\n  : (x) => JSON.parse(JSON.stringify(x));\n\nexport type NodeOutput = [string, number];\n\nexport type NodeClassInputs = Record<\n  string,\n  string | boolean | number | null | undefined | NodeOutput\n>;\n\n// { k: { [k:string]: unknown } } => { k: any }\ntype InputsFormat<T> = {\n  [K in keyof T]: T[K] extends { [k: string]: unknown }\n    ? NodeOutput\n    : T[K] | NodeOutput;\n};\n\nexport interface ComfyUINodeClass<\n  INP extends NodeClassInputs = NodeClassInputs,\n> {\n  (inputs: INP): NodeOutput[];\n}\n\nexport type BuiltinNodeClasses = {\n  [K in keyof Required<ComfyUINodeTypes.NodeTypes>]: Required<\n    Required<ComfyUINodeTypes.NodeTypes>[K]\n  > extends {\n    inputs: infer INP;\n  }\n    ? ComfyUINodeClass<InputsFormat<INP> & NodeClassInputs>\n    : ComfyUINodeClass<NodeClassInputs>;\n};\n\nexport type InvokeOptions<T> = {\n  resolver?: WorkflowOutputResolver<T>;\n  progress?: (p: ComfyUiWsTypes.Messages.Progress) => void;\n  polling_ms?: number;\n};\n\n/**\n * A class for creating a workflow using a fluent API.\n *\n * @example\n * ```typescript\n  const workflow = new Workflow();\n  const {\n    KSampler,\n    CheckpointLoaderSimple,\n    EmptyLatentImage,\n    CLIPTextEncode,\n    VAEDecode,\n    SaveImage,\n    NODE1,\n  } = workflow.classes;\n\n  const seed = Math.floor(Math.random() * 2 ** 32);\n  const pos = \"best quality, 1girl\";\n  const neg = \"worst quality, bad anatomy, embedding:NG_DeepNegative_V1_75T\";\n  const model1_name = \"lofi_v5.baked.fp16.safetensors\";\n  const model2_name = \"case-h-beta.baked.fp16.safetensors\";\n  const sampler_settings = {\n    seed,\n    steps: 35,\n    cfg: 4,\n    sampler_name: \"dpmpp_2m_sde_gpu\",\n    scheduler: \"karras\",\n    denoise: 1,\n  };\n\n  const [model1, clip1, vae1] = CheckpointLoaderSimple({\n    ckpt_name: model1_name,\n  });\n  const [model2, clip2, vae2] = CheckpointLoaderSimple({\n    ckpt_name: model2_name,\n  });\n\n  const dress_case = [\n    \"white yoga\",\n    \"black office\",\n    \"pink sportswear\",\n    \"cosplay\",\n  ];\n\n  const generate_pipeline = (model, clip, vae, pos, neg) => {\n    const [latent_image] = EmptyLatentImage({\n      width: 640,\n      height: 960,\n      batch_size: 1,\n    });\n    const [positive] = CLIPTextEncode({ text: pos, clip });\n    const [negative] = CLIPTextEncode({ text: neg, clip });\n    const [samples] = KSampler({\n      ...sampler_settings,\n      model,\n      positive,\n      negative,\n      latent_image,\n    });\n    const [image] = VAEDecode({ samples, vae });\n    return image;\n  };\n\n  for (const cloth of dress_case) {\n    const input_pos = `${pos}, ${cloth} dress`;\n    const image = generate_pipeline(model1, clip1, vae1, input_pos, neg);\n    SaveImage({\n      images: image,\n      filename_prefix: `${cloth}-lofi-v5`,\n    });\n\n    const input_pos2 = `${pos}, ${cloth} dress`;\n    const image2 = generate_pipeline(model2, clip2, vae2, input_pos2, neg);\n    SaveImage({\n      images: image2,\n      filename_prefix: `${cloth}-case-h-beta`,\n    });\n  }\n\n  return workflow;\n * ```\n */\nexport class Workflow {\n  protected _workflow: IWorkflow = {\n    prompt: {},\n  };\n  protected _last_node_id = 0;\n\n  public classes = this._createClassesProxy() as BuiltinNodeClasses &\n    Record<string, ComfyUINodeClass>;\n\n  protected _createClassesProxy() {\n    const source = {};\n    return new Proxy(source, {\n      get: (target, p, receiver) => {\n        if (p in target) {\n          return (target as any)[p];\n        }\n        return (inputs: Record<string, any>) => {\n          return this.node(p as any, inputs);\n        };\n      },\n    });\n  }\n\n  public node<\n    T extends keyof ComfyUINodeTypes.NodeTypes | (string & {}),\n    C extends T extends keyof ComfyUINodeTypes.NodeTypes\n      ? Required<Required<ComfyUINodeTypes.NodeTypes>[T]>\n      : unknown,\n  >(\n    node_name: T,\n    inputs: C extends { inputs: infer INP } ? INP : Record<string, unknown>,\n  ): Iterable<NodeOutput>;\n  public node(\n    node_name: string,\n    inputs: Record<string, unknown>,\n  ): Iterable<NodeOutput> {\n    const node: WorkflowPromptNode = {\n      class_type: node_name,\n      inputs,\n    } as any;\n    const id = (++this._last_node_id).toString();\n    this._workflow.prompt[id] = node;\n\n    function* outputs() {\n      let i = 0;\n      while (true) {\n        yield [id, i++] as NodeOutput;\n      }\n    }\n\n    const gen = outputs() as any;\n\n    for (let index = 0; index < 24; index++) {\n      gen[index] = [id, index] as NodeOutput;\n    }\n\n    return gen;\n  }\n\n  /**\n   * Resets the workflow by clearing the prompt and setting the workflow to undefined.\n   */\n  public reset() {\n    this._workflow.prompt = {};\n    this._workflow.workflow = undefined;\n    this._last_node_id = 0;\n  }\n\n  /**\n   * Returns the current workflow object.\n   *\n   * @return {IWorkflow} The current workflow object.\n   *\n   * @deprecated use `workflow` instead\n   */\n  public end() {\n    return this.workflow();\n  }\n\n  /**\n   * Returns the current workflow object.\n   *\n   * @return {IWorkflow} The current workflow object.\n   */\n  public workflow() {\n    return deepClone(this._workflow);\n  }\n\n  /**\n   * Invokes the workflow with the provided client and options.\n   *\n   * @param {Client} client - The client to use for the invocation.\n   * @param {InvokeOptions<T>} [options] - Optional invoke options.\n   * @return {Promise<WorkflowOutput<T>>} A promise resolving to the workflow output.\n   */\n  public invoke<T>(\n    client: Client,\n    options?: InvokeOptions<T>,\n  ): Promise<WorkflowOutput<T>>;\n  public invoke(\n    client: Client,\n    options?: InvokeOptions<unknown>,\n  ): Promise<WorkflowOutput<unknown>>;\n  public async invoke(\n    client: Client,\n    options?: InvokeOptions<unknown>,\n  ): Promise<WorkflowOutput<unknown>> {\n    const invoked = this.instance(client, options);\n    await invoked.enqueue();\n    const result = invoked.wait();\n    return result;\n  }\n\n  /**\n   * Creates a new invoked workflow instance.\n   *\n   * @param {Client} client - The client used to run the prompt.\n   * @param {InvokeOptions<T>} [options] - Optional invoke options.\n   * @return {InvokedWorkflow<T>} The invoked workflow instance.\n   */\n  public instance<T>(\n    client: Client,\n    options?: InvokeOptions<T>,\n  ): InvokedWorkflow<T>;\n  public instance(\n    client: Client,\n    options?: InvokeOptions<unknown>,\n  ): InvokedWorkflow;\n  public instance(\n    client: Client,\n    options?: InvokeOptions<unknown>,\n  ): InvokedWorkflow {\n    const workflow = this.workflow();\n    const invoked = new InvokedWorkflow({\n      workflow,\n      client,\n      resolver: options?.resolver,\n      progress: options?.progress,\n    });\n    return invoked;\n  }\n\n  /**\n   * Invokes a workflow using the provided client with polling.\n   *\n   * @param {Client} client - The client used to run the prompt.\n   * @param {InvokeOptions<T>} [options] - The options for invoking the workflow.\n   * @return {Promise<WorkflowOutput<T>>} A promise that resolves with the result of the prompt.\n   */\n  public invoke_polling<T>(\n    client: Client,\n    options?: InvokeOptions<T>,\n  ): Promise<WorkflowOutput<T>>;\n  public invoke_polling(\n    client: Client,\n    options?: InvokeOptions<unknown>,\n  ): Promise<WorkflowOutput>;\n  public invoke_polling(client: Client, options?: InvokeOptions<unknown>) {\n    if (typeof options?.progress === \"function\") {\n      throw new Error(\"progress option is not supported in polling mode\");\n    }\n    const { prompt, workflow } = this.workflow();\n    return client.enqueue_polling(prompt, {\n      workflow,\n      resolver: options?.resolver,\n      polling_ms: options?.polling_ms,\n    });\n  }\n}\n","import { Client } from \"../client/Client\";\n\ntype FnHook<\n  N extends keyof Client = keyof Client,\n  Fn extends Client[N] = Client[N],\n> = Fn extends (...args: any) => any\n  ? {\n      type: \"function\";\n      name: N;\n      fn: (original: Fn, ...args: Parameters<Fn>) => ReturnType<Fn>;\n    }\n  : never;\n\ntype PluginHook<\n  N extends keyof Client = keyof Client,\n  Fn extends Client[N] = Client[N],\n> = FnHook<N, Fn>;\n\nexport class Plugin {\n  private hooks = [] as PluginHook[];\n\n  public install(instance: Client) {\n    for (const hook of this.hooks) {\n      const ins = instance as any;\n      const original = ins[hook.name].bind(instance);\n      ins[hook.name] = (...args: Parameters<typeof original>) => {\n        return (hook.fn as any).bind(instance)(original, ...args);\n      };\n    }\n  }\n\n  protected addHook<\n    N extends keyof Client = keyof Client,\n    Fn extends Client[N] = Client[N],\n  >(hook: PluginHook<N, Fn>) {\n    this.hooks.push(hook);\n  }\n}\n","import { Plugin } from \"./Plugin\";\n\n/**\n * Provide api-auth support for this https://github.com/liusida/ComfyUI-Login/tree/main extension\n */\nexport class LoginAuthPlugin extends Plugin {\n  constructor(\n    readonly options: {\n      token: string;\n    },\n  ) {\n    super();\n\n    this.addHook({\n      type: \"function\",\n      name: \"apiURL\",\n      fn: (original, ...args) => {\n        const url = original(...args);\n        const urlObj = new URL(url);\n        urlObj.searchParams.set(\"token\", this.options.token);\n        return urlObj.toString();\n      },\n    });\n\n    this.addHook({\n      type: \"function\",\n      name: \"wsURL\",\n      fn: (original, ...args) => {\n        const url = original(...args);\n        const urlObj = new URL(url);\n        urlObj.searchParams.set(\"token\", this.options.token);\n        return urlObj.toString();\n      },\n    });\n  }\n}\n","import EventEmitter from \"eventemitter3\";\nimport { Client } from \"../client/Client\";\nimport { Workflow } from \"../workflow/Workflow\";\nimport { WorkflowOutput } from \"../workflow/types\";\nimport { NSPipeline } from \"./types\";\nimport { ComfyUIClientEvents } from \"../client/ws.types\";\nimport { Disposable } from \"../utils/Disposable\";\nimport { InvokedWorkflow } from \"../workflow/InvokedWorkflow\";\n\ntype PipeContext = NSPipeline.PipeContext;\n\n/**\n * pipe to create a workflow\n */\nexport class BasePipe<\n  CTX extends PipeContext = PipeContext,\n> extends Disposable {\n  /**\n   * Generates a random seed value.\n   *\n   * @return {number} A random integer seed value between 0 and 2^32 - 1.\n   */\n  static nextSeed() {\n    return Math.floor(Math.random() * 2 ** 32);\n  }\n  static defaultContext: PipeContext = {\n    seed: BasePipe.nextSeed(),\n    steps: 35,\n    cfg: 4,\n    sampler_name: \"dpmpp_2m_sde_gpu\",\n    scheduler: \"karras\",\n    denoise: 1,\n    width: 512,\n    height: 512,\n    batch_size: 1,\n    ckpt_name: \"\",\n\n    input_image: null,\n    input_mask: null,\n    grow_mask_by: 6,\n\n    positive: \"\",\n    negative: \"\",\n\n    client: null,\n  };\n  protected context: CTX;\n  protected _workflow = new Workflow();\n  protected _invoked?: Promise<InvokedWorkflow>;\n\n  constructor(context?: Partial<CTX>) {\n    super();\n    this.context = {\n      ...BasePipe.defaultContext,\n      ...context,\n    } as CTX;\n  }\n\n  protected update(ctx: Record<string, any>) {\n    Object.assign(this.context, ctx);\n  }\n\n  /**\n   * Updates the context with the provided image buffer.\n   *\n   * @param {Buffer} image - The image buffer to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  image(image: Buffer) {\n    this.update({\n      input_image: image,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided mask buffer.\n   *\n   * @param {Buffer} image - The mask buffer to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  mask(image: Buffer) {\n    this.update({\n      input_mask: image,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided model checkpoint name.\n   *\n   * @param {string} ckpt_name - The name of the model checkpoint to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  model(ckpt_name: string) {\n    this.update({\n      ckpt_name,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided width and height, and returns the current instance of the class for method chaining.\n   *\n   * @param {number} w - The width to update the context with.\n   * @param {number} h - The height to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  size(w: number, h: number) {\n    this.update({\n      width: w,\n      height: h,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided text as the positive prompt.\n   *\n   * @param {string} text - The text to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  prompt(text: string) {\n    this.update({\n      positive: text,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided text as the negative prompt.\n   *\n   * @param {string} text - The text to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  negative(text: string) {\n    this.update({\n      negative: text,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided steps and returns the current instance of the class for method chaining.\n   *\n   * @param {number} steps - The number of steps to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  steps(steps: number) {\n    this.update({\n      steps,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided cfg value.\n   *\n   * @param {number} cfg - The cfg value to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  cfg(cfg: number) {\n    this.update({\n      cfg,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided seed value or generates a random seed value if none is provided.\n   *\n   * @param {number} [seed=BasePipe.nextSeed()] - The seed value to update the context with. If not provided, a random seed value will be generated.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  seed(seed = BasePipe.nextSeed()) {\n    this.update({\n      seed,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided denoise value and returns the current instance of the class for method chaining.\n   *\n   * @param {number} denoise - The denoise value to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  denoise(denoise: number) {\n    this.update({\n      denoise,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided scheduler value and returns the current instance of the class for method chaining.\n   *\n   * @param {PipeContext[\"scheduler\"]} scheduler - The scheduler value to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  scheduler(scheduler: PipeContext[\"scheduler\"]) {\n    this.update({\n      scheduler,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided sampler name and returns the current instance of the class for method chaining.\n   *\n   * @param {PipeContext[\"sampler_name\"]} sampler_name - The sampler name to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  sampler(sampler_name: PipeContext[\"sampler_name\"]) {\n    this.update({\n      sampler_name,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided batch size and returns the current instance of the class for method chaining.\n   *\n   * @param {number} batch_size - The batch size to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  batch_size(batch_size: number) {\n    this.update({\n      batch_size,\n    });\n    return this;\n  }\n\n  /**\n   * Updates the context with the provided client and returns the current instance of the class for method chaining.\n   *\n   * @param {Client} client - The client to update the context with.\n   * @return {this} The current instance of the class for method chaining.\n   */\n  with(client: Client) {\n    this.update({\n      client,\n    });\n    return this;\n  }\n\n  /**\n   * Adds an event listener for the specified event type.\n   */\n  on<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\n    type: T,\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\n    options?: any,\n  ) {\n    const { _invoked: invoked } = this;\n    if (!invoked) {\n      throw new Error(\"workflow not invoked\");\n    }\n    invoked.then((instance) => {\n      instance.on(type, callback, options);\n    });\n    return this;\n  }\n\n  /**\n   * Adds an once event listener for the specified event type.\n   */\n  once<T extends EventEmitter.EventNames<ComfyUIClientEvents>>(\n    type: T,\n    callback: EventEmitter.EventListener<ComfyUIClientEvents, T>,\n    options?: any,\n  ) {\n    const { _invoked: invoked } = this;\n    if (!invoked) {\n      throw new Error(\"workflow not invoked\");\n    }\n    invoked.then((instance) => {\n      instance.once(type, callback, options);\n    });\n    return this;\n  }\n\n  protected build_latent(vae: any) {\n    const { context, _workflow: workflow } = this;\n    const cls = workflow.classes;\n    const { width, height, batch_size } = context;\n    const { input_image, input_mask, grow_mask_by } = this.context;\n    if (!input_image) {\n      return cls.EmptyLatentImage({\n        width,\n        height,\n        batch_size,\n      })[0];\n    }\n    const pixels = cls.ETN_LoadImageBase64({\n      image: input_image.toString(\"base64\"),\n    })[0];\n    if (!input_mask) {\n      return cls.VAEEncode({\n        pixels,\n        vae,\n      })[0];\n    }\n    const mask = cls.ETN_LoadMaskBase64({\n      mask: input_mask.toString(\"base64\"),\n    })[0];\n    return cls.VAEEncodeForInpaint({\n      pixels,\n      vae,\n      mask,\n      grow_mask_by,\n    })[0];\n  }\n\n  protected build() {\n    const { context, _workflow: workflow } = this;\n    const cls = workflow.classes;\n    const {\n      seed,\n      steps,\n      cfg,\n      scheduler,\n      denoise,\n      ckpt_name,\n      positive,\n      negative,\n      sampler_name,\n    } = context;\n    const [model, clip, vae] = cls.CheckpointLoaderSimple({\n      ckpt_name,\n    });\n    const enc = (text: string) => cls.CLIPTextEncode({ text, clip })[0];\n    const [samples] = cls.KSampler({\n      seed,\n      steps,\n      cfg,\n      sampler_name,\n      scheduler,\n      denoise,\n      model,\n      positive: enc(positive),\n      negative: enc(negative),\n      latent_image: this.build_latent(vae),\n    });\n\n    return { samples, vae, cls };\n  }\n\n  protected _save(filename_prefix?: string) {\n    const { samples, vae, cls } = this.build();\n\n    const images = cls.VAEDecode({ samples, vae })[0];\n    if (filename_prefix) {\n      cls.SaveImage({\n        filename_prefix,\n        images,\n      });\n    } else {\n      cls.SaveImageWebsocket({\n        images,\n      });\n    }\n  }\n\n  protected async read_response(res: WorkflowOutput<unknown>) {\n    const images = [] as {\n      data: ArrayBuffer;\n      mime: string;\n    }[];\n    for (const img of res.images) {\n      switch (img.type) {\n        case \"buff\": {\n          images.push({\n            data: img.data,\n            mime: img.mime,\n          });\n          break;\n        }\n        case \"url\": {\n          const { data: url } = img;\n          const resp = await fetch(url);\n          const mime = resp.headers.get(\"content-type\") ?? \"image/png\";\n          const blob = await resp.blob();\n          images.push({\n            data: await blob.arrayBuffer(),\n            mime,\n          });\n          break;\n        }\n      }\n    }\n    return images;\n  }\n\n  /**\n   * Saves the workflow by invoking the workflow instance and enqueuing it.\n   *\n   * @param {string} [filename_prefix] - The prefix for the saved filename. if not provided, the workflow will be saved as a websocket connection.\n   * @return {this} - Returns the instance of the class for method chaining.\n   * @throws {Error} - Throws an error if the client is not defined.\n   */\n  save(filename_prefix?: string) {\n    const {\n      context: { client },\n      _workflow: workflow,\n    } = this;\n    if (!client) {\n      throw new Error(\"client is not defined\");\n    }\n    this._save(filename_prefix);\n    this._invoked = (async () => {\n      const instance = workflow.instance(client);\n      instance._connect(() => this.dispose());\n      await instance.enqueue();\n      return instance;\n    })();\n    return this;\n  }\n\n  /**\n   * Waits for the workflow to complete and returns the result and the images.\n   *\n   * @return {Promise<{result: WorkflowOutput<unknown>, images: {data: ArrayBuffer, mime: string}[]}>} - A promise that resolves to an object containing the result of the workflow and the images.\n   * @throws {Error} - Throws an error if the workflow has not been invoked.\n   */\n  async wait() {\n    const { _invoked: invoked } = this;\n    if (!invoked) {\n      throw new Error(\"workflow not invoked\");\n    }\n    const result = await (await invoked).wait();\n    const images = await this.read_response(result);\n    return {\n      result,\n      images,\n    };\n  }\n\n  /**\n   * Waits for the workflow to complete and returns the result and the images.\n   *\n   * *This function does not rely on WebSocket Events, so it maybe will lose events output by WebSocket node\n   *\n   * @return {Promise<{result: WorkflowOutput<unknown>, images: {data: ArrayBuffer, mime: string}[]}>} - A promise that resolves to an object containing the result of the workflow and the images.\n   * @throws {Error} - Throws an error if the workflow has not been invoked.\n   */\n  async wait_polling() {\n    const { _invoked: invoked } = this;\n    if (!invoked) {\n      throw new Error(\"workflow not invoked\");\n    }\n    const result = await (await invoked).wait_polling();\n    const images = await this.read_response(result);\n    return {\n      result,\n      images,\n    };\n  }\n}\n","import { BasePipe } from \"./base\";\nimport { NSPipeline } from \"./types\";\n\ninterface EfficientPipeContext extends NSPipeline.PipeContext {\n  vae_name: string;\n  clip_skip: number;\n  token_normalization: \"none\" | \"mean\" | \"length\" | \"length+mean\";\n  weight_interpretation:\n    | \"comfy\"\n    | \"A1111\"\n    | \"compel\"\n    | \"comfy++\"\n    | \"down_weight\";\n\n  loras: {\n    name: string;\n    weight: number;\n    model_strength: number;\n    clip_strength: number;\n  }[];\n  control_net_blocks: {\n    image: Buffer;\n    name: string;\n    strength: number;\n    start: number;\n    end: number;\n  }[];\n}\n\n/**\n * pipe to create a workflow\n *\n * required https://github.com/jags111/efficiency-nodes-comfyui\n */\nexport class EfficientPipe extends BasePipe<EfficientPipeContext> {\n  static defaultContext: EfficientPipeContext = {\n    ...BasePipe.defaultContext,\n    vae_name: \"Baked VAE\",\n    clip_skip: -2,\n    token_normalization: \"none\",\n    weight_interpretation: \"A1111\",\n\n    loras: [],\n    control_net_blocks: [],\n  };\n\n  constructor(context?: Partial<EfficientPipeContext>) {\n    super();\n    this.context = {\n      ...EfficientPipe.defaultContext,\n      ...context,\n    } as EfficientPipeContext;\n  }\n\n  /**\n   * Adds a LoRA (Low-Rank Adaptation) to the EfficientPipe context.\n   *\n   * @param {string} name - The name of the LoRA.\n   * @param {object} options - Optional configuration for the LoRA.\n   * @param {number} [options.weight=1] - The weight of the LoRA.\n   * @param {number} [options.strength=1] - The strength of the LoRA.\n   * @param {number} [options.clip_strength=1] - The clip strength of the LoRA.\n   * @return {EfficientPipe} The EfficientPipe instance for chaining.\n   */\n  lora(\n    name: string,\n    {\n      weight = 1,\n      strength = 1,\n      clip_strength = 1,\n    }: { weight?: number; strength?: number; clip_strength?: number } = {},\n  ) {\n    this.context.loras.push({\n      name,\n      weight,\n      model_strength: strength,\n      clip_strength,\n    });\n    return this;\n  }\n\n  /**\n   * Adds a control net block to the EfficientPipe context.\n   *\n   * @param {string} name - The name of the control net block.\n   * @param {Buffer} image - The image data of the control net block.\n   * @param {object} options - Optional configuration for the control net block.\n   * @param {number} [options.strength=1] - The strength of the control net block.\n   * @param {number} [options.start=0] - The start value of the control net block.\n   * @param {number} [options.end=1] - The end value of the control net block.\n   * @return {EfficientPipe} The EfficientPipe instance for chaining.\n   */\n  cnet(\n    name: string,\n    image: Buffer,\n    {\n      strength = 1,\n      start = 0,\n      end = 1,\n    }: {\n      strength?: number;\n      start?: number;\n      end?: number;\n    } = {},\n  ) {\n    this.context.control_net_blocks.push({\n      image,\n      name,\n      strength,\n      start,\n      end,\n    });\n    return this;\n  }\n\n  protected build_lora_stack() {\n    const { loras } = this.context;\n    if (loras.length === 0) {\n      return undefined;\n    }\n    const { _workflow: workflow } = this;\n    const cls = workflow.classes;\n    const params: any = {\n      lora_count: loras.length,\n    };\n    for (let idx = 0; idx < 50; idx++) {\n      const lora = loras[idx];\n      if (!lora) {\n        params[`lora_name_${idx}`] = \"None\";\n        params[`lora_wt_${idx}`] = 1;\n        params[`model_str_${idx}`] = 1;\n        params[`clip_str_${idx}`] = 1;\n        continue;\n      }\n      const { name, weight, model_strength, clip_strength } = lora;\n      params[`lora_name_${idx}`] = name;\n      params[`lora_wt_${idx}`] = weight;\n      params[`model_str_${idx}`] = model_strength;\n      params[`clip_str_${idx}`] = clip_strength;\n    }\n\n    const [stack] = cls[\"LoRA Stacker\"]({\n      input_mode: \"advanced\",\n      ...params,\n    });\n    return stack;\n  }\n\n  protected build_cnet_block(\n    {\n      image,\n      name,\n      strength,\n      start,\n      end,\n    }: EfficientPipeContext[\"control_net_blocks\"][number],\n    stack: any,\n  ) {\n    const { _workflow: workflow } = this;\n    const { ControlNetLoader, ETN_LoadImageBase64 } = workflow.classes;\n    const cls = workflow.classes;\n    const [model] = ControlNetLoader({\n      control_net_name: name,\n    });\n    const [img] = ETN_LoadImageBase64({\n      image: image.toString(\"base64\"),\n    });\n    const [stack_out] = cls[\"Control Net Stacker\"]({\n      control_net: model,\n      image: img,\n      strength,\n      start_percent: start,\n      end_percent: end,\n      cnet_stack: stack,\n    });\n    return stack_out;\n  }\n\n  protected build_cnet_stack() {\n    const { control_net_blocks } = this.context;\n    if (control_net_blocks.length === 0) {\n      return undefined;\n    }\n    let stack = undefined as any;\n    for (const cnet of control_net_blocks) {\n      stack = this.build_cnet_block(cnet, stack);\n    }\n    return stack;\n  }\n\n  protected build() {\n    const { context, _workflow: workflow } = this;\n    const cls = workflow.classes;\n    const {\n      seed,\n      steps,\n      cfg,\n      scheduler,\n      denoise,\n      ckpt_name,\n      positive,\n      negative,\n      sampler_name,\n      vae_name,\n      clip_skip,\n      token_normalization,\n      weight_interpretation,\n      width,\n      height,\n      batch_size,\n    } = context;\n    const [model, cond_pos, cond_neg, latent, vae, clip, deps] = cls[\n      \"Efficient Loader\"\n    ]({\n      ckpt_name,\n      vae_name,\n      clip_skip,\n      token_normalization,\n      weight_interpretation,\n      empty_latent_height: height,\n      empty_latent_width: width,\n      batch_size,\n      positive,\n      negative,\n\n      lora_stack: this.build_lora_stack(),\n      cnet_stack: this.build_cnet_stack(),\n\n      // NOTE: All lora loads use stack instead of here\n      lora_name: \"None\",\n      lora_model_strength: 1,\n      lora_clip_strength: 1,\n    });\n\n    const [samples] = cls.KSampler({\n      seed,\n      steps,\n      cfg,\n      sampler_name,\n      scheduler,\n      denoise,\n      model,\n      positive: cond_pos,\n      negative: cond_neg,\n      latent_image: this.build_latent(vae),\n    });\n\n    return { samples, vae, cls };\n  }\n}\n","export * from \"./client/WsClient\";\nexport * from \"./client/Client\";\nexport * from \"./workflow/Workflow\";\nexport * from \"./plugins/Plugin\";\nexport * as plugins from \"./plugins\";\nexport * as builtins from \"./builtins\";\nexport * from \"./pipeline\";\n\nexport * from \"./client/types\";\nexport * from \"./client/ws.types\";\nexport * from \"./client/response.types\";\n\nexport * from \"./workflow/types\";\nexport * from \"./pipeline/types\";\n\nimport { WsClient } from \"./client/WsClient\";\nimport { Client } from \"./client/Client\";\nimport { Workflow } from \"./workflow/Workflow\";\nimport { Plugin } from \"./plugins/Plugin\";\n\n/**\n * @deprecated use `Client` instead\n */\nexport const ComfyUIApiClient = Client;\n\n/**\n * @deprecated use `WsClient` instead\n */\nexport const ComfyUIWsClient = WsClient;\n\n/**\n * @deprecated use `Workflow` instead\n */\nexport const ComfyUIWorkflow = Workflow;\n\n/**\n * @deprecated use `Plugin` instead\n */\nexport const ClientPlugin = Plugin;\n"],"names":["Errors","has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","isNone","x","HttpError","_Error","message","status","json","_this","_inheritsLoose","_wrapNativeSuper","Error","WsClient","config","_config$api_host","_config$api_base","_config$clientId","_config$WebSocket","_config$ssl","_config$user","_config$fetch","api_host","api_base","clientId","socket","WebSocket","ssl","user","fetch","socket_callbacks","_polling_timer","_polling_interval","closed","DEFAULT_API_HOST","DEFAULT_API_BASE","replace","c","r","Math","random","toString","globalThis","DEFAULT_USER","bind","console","warn","loadImageData","buf","view","DataView","eventType","getUint32","imageType","mime","image","_proto","_createClass","apiHeaders","options","_options$headers","_extends","Accept","headers","apiURL","route","url","URL","_split","split","query","pathname","search","searchParams","set","viewURL","filename","subfolder","type","URLSearchParams","wsURL","fetchApi","Promise","resolve","then","res","_exit","statusText","_temp","_res$json","_result","e","reject","addEventListener","callback","_this2","_this3","startPollingQueue","_this4","setInterval","_temp2","resp","_catch","addSocketCallback","_this5","removeEventListener","removeSocketCallbacks","createSocket","isReconnect","_this6","opened","binaryType","ev","_err$message","err","is404Error","includes","close","setTimeout","data","ArrayBuffer","Buffer","isBuffer","isImageMessage","msg","JSON","parse","sid","registered","init","disconnect","connect","_temp3","_polling$interval","_ref","_ref$polling","polling","enabled","_ref$websocket","websocket","interval","_disconnectSocket","process","nextTick","_disconnectPolling","readyState","OPEN","error","clearInterval","key","get","IS_BROWSER","window","GlobalCacheHub","_cached","KEY","Map","clear","value","CachedFn","ns","_options$expire_time","_options$enabled","expire_time_ms","cache_ns","expire_time","_defaultExpire","_proto2","reset","_hashArgs","stringify","warp","now","Date","argsHash","cacheKey","hit_cached","expire","result","RESOLVERS","acc","output","client","images","map","filter","Boolean","body","recover","pact","s","_Pact","o","_settle","state","v","observer","onFulfilled","onRejected","_isSettledPact","thenable","Client","_WsClient","_cached_fn","_plugins","cache","use","plugin","install","getExtensions","cached","getEmbeddings","getNodeDefs","resetCache","queuePrompt","queue_index","prompt","workflow","client_id","extra_data","extra_pnginfo","front","number","method","text","error_resp","response","getItems","getQueue","getHistory","_this7","Running","queue_running","remove","cb","interrupt","Pending","queue_pending","max_items","_this8","_res$json2","History","values","getSystemStats","postApi","deleteItem","id","delete","clearItems","free","params","getUserConfig","_this15$fetchApi","createUser","username","getSettings","_this17$fetchApi","getSetting","encodeURIComponent","_this18$fetchApi","storeSettings","settings","storeSetting","getUserData","file","storeUserData","getSamplers","node_config","_node$input","node","input","required","getSchedulers","_node$input2","getSDModels","_node$input3","getCNetModels","_node$input4","getUpscaleModels","_node$input5","getHyperNetworks","_node$input6","getLoRAs","_node$input7","getVAEs","_node$input8","getPromptStatus","prompt_id","_ref2","running","some","task","_task$prompt","pending","_task$prompt2","done","getPromptOutputs","_ref3","item","find","status_str","outputs","getPromptResult","resolver","_this33","entries","reduce","_ref4","node_id","waitForPrompt","polling_ms","_this34","prompt_status","test","update","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","_resumeAfterUpdate","_for","_this34$getPromptStat","waitForPromptWebSocket","_this35","offEvent2","offEvent","resolved","_enqueue_prompt","runPrompt","_this37","enqueue_polling","_this38","progress","_options$resolver","enqueue","_this39","off_progress","on_progress","finalizer","_options$resolver2","_finallyRethrows","_wasThrown","_result3","task_id","_data","Disposable","_disposed","_disposed_cbs","dispose","forEach","_connect","NSPipeline","InvokedWorkflow","_Disposable","is_done","enqueued","_enqueue_guard","_task_id_guard","_done_guard","_ws_guard","is_owner_event","hook_progress","hook_image_data","_task_id","off_event","resolve_to_result","collect_result","_this9","_this9$_result$data","when_interrupted","wait_polling","_this10","wait","_this11","maybe_done","deepClone","structuredClone","Workflow","_workflow","_last_node_id","classes","_createClassesProxy","Proxy","target","p","receiver","inputs","node_name","_marked","_regeneratorRuntime","mark","class_type","wrap","outputs$","_context","prev","next","stop","gen","index","end","invoke","invoked","instance","invoke_polling","_this$workflow","Plugin","hooks","_loop","_step","hook","ins","original","_iterator","_createForOfIteratorHelperLoose","addHook","_Plugin","LoginAuthPlugin","urlObj","token","samplers","schedulers","_iteratorSymbol","Symbol","iterator","BasePipe","_invoked","defaultContext","nextSeed","floor","pow","ctx","assign","input_image","mask","input_mask","model","ckpt_name","size","w","h","width","height","positive","negative","steps","cfg","seed","denoise","scheduler","sampler","sampler_name","batch_size","build_latent","vae","cls","_this$context","grow_mask_by","EmptyLatentImage","pixels","ETN_LoadImageBase64","VAEEncode","ETN_LoadMaskBase64","VAEEncodeForInpaint","build","_cls$CheckpointLoader","CheckpointLoaderSimple","clip","enc","CLIPTextEncode","samples","KSampler","latent_image","_save","filename_prefix","_this$build","VAEDecode","SaveImage","SaveImageWebsocket","read_response","step","_cycle","_fixup","array","check","_forTo","_forOf","img","_switch","_resp$headers$get","blob","_push","arrayBuffer","_blob$arrayBuffer","save","_invoked2","EfficientPipe","_BasePipe","lora","_ref$weight","weight","_ref$strength","strength","_ref$clip_strength","clip_strength","loras","model_strength","cnet","_ref2$strength","_ref2$start","start","_ref2$end","control_net_blocks","build_lora_stack","lora_count","idx","input_mode","build_cnet_block","stack","_workflow$classes","ControlNetLoader","control_net_name","_ETN_LoadImageBase","control_net","start_percent","end_percent","cnet_stack","build_cnet_stack","_cls$EfficientLoader","vae_name","clip_skip","token_normalization","weight_interpretation","empty_latent_height","empty_latent_width","lora_stack","lora_name","lora_model_strength","lora_clip_strength","cond_pos","cond_neg","latent","ComfyUIApiClient","ComfyUIWsClient","ComfyUIWorkflow","ClientPlugin"],"mappings":"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"}